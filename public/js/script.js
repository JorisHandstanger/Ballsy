/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("__webpack_require__(1);\nmodule.exports = __webpack_require__(4);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** multi main\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///multi_main?");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n// some features need the be polyfilled..\n// https://babeljs.io/docs/usage/polyfill/\n\n// import 'babel-core/polyfill';\n// or import specific polyfills\n// import {$} from './helpers/util';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _modulesControls = __webpack_require__(2);\n\nvar _modulesControls2 = _interopRequireDefault(_modulesControls);\n\nvar _modulesOrb = __webpack_require__(3);\n\nvar _modulesOrb2 = _interopRequireDefault(_modulesOrb);\n\nvar camera, scene, renderer;\nvar geometry, material, mesh;\nvar controls;\n\nvar orbs = [];\n\nvar raycaster;\n\nvar blocker = document.getElementById('blocker');\nvar instructions = document.getElementById('instructions');\n\n// http://www.html5rocks.com/en/tutorials/pointerlock/intro/\n\nvar havePointerLock = 'pointerLockElement' in document || 'mozPointerLockElement' in document || 'webkitPointerLockElement' in document;\n\nif (havePointerLock) {\n\n  var element = document.body;\n\n  var pointerlockchange = function pointerlockchange() {\n\n    if (document.pointerLockElement === element || document.mozPointerLockElement === element || document.webkitPointerLockElement === element) {\n\n      controlsEnabled = true;\n      controls.enabled = true;\n\n      blocker.style.display = 'none';\n    } else {\n\n      controls.enabled = false;\n\n      blocker.style.display = '-webkit-box';\n      blocker.style.display = '-moz-box';\n      blocker.style.display = 'box';\n\n      instructions.style.display = '';\n    }\n  };\n\n  var pointerlockerror = function pointerlockerror() {\n\n    instructions.style.display = '';\n  };\n\n  // Hook pointer lock state change events\n  document.addEventListener('pointerlockchange', pointerlockchange, false);\n  document.addEventListener('mozpointerlockchange', pointerlockchange, false);\n  document.addEventListener('webkitpointerlockchange', pointerlockchange, false);\n\n  document.addEventListener('pointerlockerror', pointerlockerror, false);\n  document.addEventListener('mozpointerlockerror', pointerlockerror, false);\n  document.addEventListener('webkitpointerlockerror', pointerlockerror, false);\n\n  instructions.addEventListener('click', function () {\n\n    instructions.style.display = 'none';\n\n    // Ask the browser to lock the pointer\n    element.requestPointerLock = element.requestPointerLock || element.mozRequestPointerLock || element.webkitRequestPointerLock;\n\n    if (/Firefox/i.test(navigator.userAgent)) {\n\n      var fullscreenchange = function fullscreenchange() {\n\n        if (document.fullscreenElement === element || document.mozFullscreenElement === element || document.mozFullScreenElement === element) {\n\n          document.removeEventListener('fullscreenchange', fullscreenchange);\n          document.removeEventListener('mozfullscreenchange', fullscreenchange);\n\n          element.requestPointerLock();\n        }\n      };\n\n      document.addEventListener('fullscreenchange', fullscreenchange, false);\n      document.addEventListener('mozfullscreenchange', fullscreenchange, false);\n\n      element.requestFullscreen = element.requestFullscreen || element.mozRequestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n      element.requestFullscreen();\n    } else {\n\n      element.requestPointerLock();\n    }\n  }, false);\n} else {\n\n  instructions.innerHTML = 'Your browser doesn\\'t seem to support Pointer Lock API';\n}\n\ninit();\nanimate();\n\nvar controlsEnabled = false;\n\nvar moveForward = false;\nvar moveBackward = false;\nvar moveLeft = false;\nvar moveRight = false;\n\nvar prevTime = performance.now();\nvar velocity = new THREE.Vector3();\n\nfunction init() {\n\n  camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000);\n\n  scene = new THREE.Scene();\n  scene.fog = new THREE.Fog(0x000000, 0, 750);\n\n  var light = new THREE.HemisphereLight(0xeeeeff, 0x777788, 0.89);\n  light.position.set(0.5, 20, 0.75);\n  scene.add(light);\n\n  controls = new THREE.PointerLockControls(camera);\n  scene.add(controls.getObject());\n\n  for (var i = 0; i <= 10; i++) {\n    var orb = new _modulesOrb2['default'](getRandomPoint(), getRandomColor());\n    orbs.push(orb);\n  }\n\n  var onKeyDown = function onKeyDown(event) {\n\n    switch (event.keyCode) {\n\n      case 38: // up\n      case 90:\n        // z\n        moveForward = true;\n        break;\n\n      case 37: // left\n      case 81:\n        // q\n        moveLeft = true;\n        break;\n\n      case 40: // down\n      case 83:\n        // s\n        moveBackward = true;\n        break;\n\n      case 39: // right\n      case 68:\n        // d\n        moveRight = true;\n        break;\n\n    }\n  };\n\n  var onKeyUp = function onKeyUp(event) {\n\n    switch (event.keyCode) {\n\n      case 38: // up\n      case 90:\n        // z\n        moveForward = false;\n        break;\n\n      case 37: // left\n      case 81:\n        // q\n        moveLeft = false;\n        break;\n\n      case 40: // down\n      case 83:\n        // s\n        moveBackward = false;\n        break;\n\n      case 39: // right\n      case 68:\n        // d\n        moveRight = false;\n        break;\n\n    }\n  };\n\n  document.addEventListener('keydown', onKeyDown, false);\n  document.addEventListener('keyup', onKeyUp, false);\n\n  raycaster = new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, -1, 0), 0, 10);\n\n  // floor\n\n  geometry = new THREE.PlaneGeometry(2000, 2000, 100, 100);\n  geometry.rotateX(-Math.PI / 2);\n\n  //vorm van vloer\n  for (var i = 0, l = geometry.vertices.length; i < l; i++) {\n\n    var vertex = geometry.vertices[i];\n    vertex.x += Math.random() * 20 - 10;\n    vertex.y += Math.random() * 10;\n    vertex.z += Math.random() * 20 - 10;\n  }\n\n  material = new THREE.MeshPhongMaterial({ color: 0x444444, specular: 0x444444, shininess: 30 });\n\n  mesh = new THREE.Mesh(geometry, material);\n  scene.add(mesh);\n\n  orbs.forEach(function (e) {\n    scene.add(e.render(camera));\n  });\n\n  //\n\n  renderer = new THREE.WebGLRenderer();\n  renderer.setClearColor(0x000000);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n\n  //\n\n  window.addEventListener('resize', onWindowResize, false);\n}\n\nfunction onWindowResize() {\n\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n\n  renderer.setSize(window.innerWidth, window.innerHeight);\n}\n\nfunction update() {\n  orbs.forEach(function (e) {\n    e.update(controls);\n  });\n}\n\nfunction animate() {\n\n  requestAnimationFrame(animate);\n\n  if (controlsEnabled) {\n    raycaster.ray.origin.copy(controls.getObject().position);\n    raycaster.ray.origin.y -= 10;\n\n    var time = performance.now();\n    var delta = (time - prevTime) / 1000;\n\n    velocity.x -= velocity.x * 5.0 * delta;\n    velocity.z -= velocity.z * 5.0 * delta;\n    velocity.y -= velocity.y * 5.0 * delta;\n\n    if (moveForward) velocity.z -= 500.0 * delta - 500.0 * delta / (90 * Math.PI / 180) * Math.abs(controls.getPitchObject().rotation.x);\n    if (moveBackward) velocity.z += 500.0 * delta - 500.0 * delta / (90 * Math.PI / 180) * Math.abs(controls.getPitchObject().rotation.x);\n\n    if (moveLeft) velocity.x -= 500.0 * delta;\n    if (moveRight) velocity.x += 500.0 * delta;\n\n    if (moveForward) velocity.y += 500.0 * delta / (90 * Math.PI / 180) * controls.getPitchObject().rotation.x;\n    if (moveBackward) velocity.y -= 500.0 * delta / (90 * Math.PI / 180) * controls.getPitchObject().rotation.x;\n\n    controls.getObject().translateX(velocity.x * delta);\n    controls.getObject().translateY(velocity.y * delta);\n    controls.getObject().translateZ(velocity.z * delta);\n\n    prevTime = time;\n  }\n\n  renderer.render(scene, camera);\n  update();\n}\n\nfunction getRandomPoint() {\n\n  return {\n    x: randomBetween(-300, 300),\n    y: randomBetween(10, 60),\n    z: randomBetween(-300, 300)\n  };\n}\n\nfunction randomBetween(min, max) {\n\n  var rand = min + Math.random() * (max - min);\n  if (rand) rand = Math.round(rand);\n\n  return rand;\n}\n\nfunction getRandomColor() {\n  var letters = '0123456789ABCDEF'.split('');\n  var color = '0x';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./_js/script.js\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./_js/script.js?");

/***/ },
/* 2 */
/***/ function(module, exports) {

	eval("'use strict';\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.PointerLockControls = function (camera) {\n\n  var scope = this;\n\n  camera.rotation.set(0, 0, 0);\n\n  var pitchObject = new THREE.Object3D();\n  pitchObject.add(camera);\n\n  var yawObject = new THREE.Object3D();\n  yawObject.position.y = 10;\n  yawObject.add(pitchObject);\n\n  var PI_2 = Math.PI / 2;\n\n  var onMouseMove = function onMouseMove(event) {\n\n    if (scope.enabled === false) return;\n\n    var movementX = event.movementX || event.mozMovementX || event.webkitMovementX || 0;\n    var movementY = event.movementY || event.mozMovementY || event.webkitMovementY || 0;\n\n    yawObject.rotation.y -= movementX * 0.002;\n    pitchObject.rotation.x -= movementY * 0.002;\n\n    pitchObject.rotation.x = Math.max(-PI_2, Math.min(PI_2, pitchObject.rotation.x));\n  };\n\n  this.dispose = function () {\n\n    document.removeEventListener('mousemove', onMouseMove, false);\n  };\n\n  document.addEventListener('mousemove', onMouseMove, false);\n\n  this.enabled = false;\n\n  this.getObject = function () {\n\n    return yawObject;\n  };\n\n  this.getPitchObject = function () {\n\n    return pitchObject;\n  };\n\n  this.getDirection = (function () {\n\n    // assumes the camera itself is not rotated\n\n    var direction = new THREE.Vector3(0, 0, -1);\n    var rotation = new THREE.Euler(0, 0, 0, 'YXZ');\n\n    return function (v) {\n\n      rotation.set(pitchObject.rotation.x, yawObject.rotation.y, 0);\n\n      v.copy(direction).applyEuler(rotation);\n\n      return v;\n    };\n  })();\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./_js/modules/controls.js\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./_js/modules/controls.js?");

/***/ },
/* 3 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar Orb = (function () {\n  function Orb(position, color) {\n    _classCallCheck(this, Orb);\n\n    this.color = color;\n    this.position = position;\n\n    this.obj = {};\n  }\n\n  _createClass(Orb, [{\n    key: 'update',\n    value: function update(controls) {\n      this.obj.shape.children[1].material.uniforms.viewVector.value = new THREE.Vector3().subVectors(controls.getObject().position, this.obj.shape.children[2].position);\n      this.obj.shape.children[2].material.uniforms.viewVector.value = new THREE.Vector3().subVectors(controls.getObject().position, this.obj.shape.children[2].position);\n\n      var time = performance.now();\n      var sineScale = 1 - Math.sin(time / 800 - 1) / 8;\n\n      this.obj.shape.children[0].intensity = sineScale * 2;\n      this.obj.shape.children[1].scale.set(sineScale, sineScale, sineScale);\n      this.obj.shape.children[2].scale.set(sineScale, sineScale, sineScale);\n    }\n  }, {\n    key: 'render',\n    value: function render(camera) {\n      var _position = this.position;\n      var x = _position.x;\n      var y = _position.y;\n      var z = _position.z;\n\n      var group = new THREE.Object3D(); //create an empty container\n\n      var outerBall;\n      var middleBall;\n      var light1;\n\n      // Licht bal\n\n      var sphere = new THREE.SphereGeometry(3, 30, 30);\n\n      light1 = new THREE.PointLight(parseInt(this.color, 16), 3, 30);\n      light1.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: parseInt(this.LightenColor(this.color, 50), 16) })));\n\n      light1.position.x = x;\n      light1.position.y = y;\n      light1.position.z = z;\n\n      group.add(light1); //add a mesh with geometry to it\n\n      // Buitenste mesh\n\n      var geometry = new THREE.SphereGeometry(8, 30, 30);\n\n      var material = new THREE.ShaderMaterial({\n        uniforms: {\n          'c': { type: 'f', value: 1 },\n          'p': { type: 'f', value: 1 },\n          glowColor: { type: 'c', value: new THREE.Color(parseInt(this.color), 16) },\n          viewVector: { type: 'v3', value: camera.position }\n        },\n        vertexShader: document.getElementById('vertexShader').textContent,\n        fragmentShader: document.getElementById('fragmentShader').textContent,\n        side: THREE.FrontSide,\n        blending: THREE.AdditiveBlending,\n        transparent: true\n      });\n\n      outerBall = new THREE.Mesh(geometry.clone(), material.clone());\n      outerBall.position.x = x;\n      outerBall.position.y = y;\n      outerBall.position.z = z;\n\n      group.add(outerBall);\n\n      // Glow\n\n      geometry = new THREE.SphereGeometry(8, 60, 60);\n\n      material = new THREE.ShaderMaterial({\n        uniforms: {\n          'c': { type: 'f', value: 0.1 },\n          'p': { type: 'f', value: 6 },\n          glowColor: { type: 'c', value: new THREE.Color(parseInt(this.LightenColor(this.color, 50), 16)) },\n          viewVector: { type: 'v3', value: camera.position }\n        },\n        vertexShader: document.getElementById('vertexShader').textContent,\n        fragmentShader: document.getElementById('fragmentShader').textContent,\n        side: THREE.FrontSide,\n        blending: THREE.AdditiveBlending,\n        transparent: true\n      });\n\n      middleBall = new THREE.Mesh(geometry.clone(), material.clone());\n      middleBall.position.x = x;\n      middleBall.position.y = y;\n      middleBall.position.z = z;\n\n      group.add(middleBall);\n\n      this.obj.shape = group;\n\n      return this.obj.shape;\n    }\n  }, {\n    key: 'LightenColor',\n    value: function LightenColor(color, percent) {\n      var num = parseInt(color, 16),\n          amt = Math.round(2.55 * percent),\n          R = (num >> 16) + amt,\n          B = (num >> 8 & 0x00FF) + amt,\n          G = (num & 0x0000FF) + amt;\n\n      return (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (B < 255 ? B < 1 ? 0 : B : 255) * 0x100 + (G < 255 ? G < 1 ? 0 : G : 255)).toString(16).slice(1);\n    }\n  }]);\n\n  return Orb;\n})();\n\nexports['default'] = Orb;\nmodule.exports = exports['default'];\n\n/*****************\n ** WEBPACK FOOTER\n ** ./_js/modules/Orb.js\n ** module id = 3\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./_js/modules/Orb.js?");

/***/ },
/* 4 */
/***/ function(module, exports) {

	eval("// removed by extract-text-webpack-plugin\n\n/*****************\n ** WEBPACK FOOTER\n ** ./_scss/style.scss\n ** module id = 4\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./_scss/style.scss?");

/***/ }
/******/ ]);